{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/CustomTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/homepage.tsx","app/layout/LoadingComponent.tsx","app/common/form/CustomTextArea.tsx","app/common/form/CustomSelectInput.tsx","app/common/options/CategoryOptions.ts","app/common/form/CustomDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","responseBody","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","updateProfile","profile","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","getUserActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","loadingActivities","userActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingsCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","CustomTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","CustomTextArea","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","CustomDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","ProfileAbout","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.a0420b9a.chunk.js","sourcesContent":["export interface Pagination {\n\tcurrentPage: number;\n\titemsPerPage: number;\n\ttotalItems: number;\n\ttotalPages: number;\n}\n\nexport class PaginatedResult<T> {\n\tdata: T;\n\tpagination: Pagination;\n\n\tconstructor(data: T, pagination: Pagination){\n\t\tthis.data = data;\n\t\tthis.pagination = pagination;\n\t}\n}\n\nexport class PagingParams {\n\tpageNumber;\n\tpageSize;\n\n\tconstructor(pageNumber = 1, pageSize = 10){\n\t\tthis.pageNumber = pageNumber;\n\t\tthis.pageSize = pageSize;\n\t}\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { PaginatedResult } from '../models/pagination';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\nconst sleep = (delay: number) => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(resolve, delay)\n\t})\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n\tconst token = store.commonStore.token;\n\tif(token) config.headers.Authorization = `Bearer ${token}`\n\treturn config;\n})\n\naxios.interceptors.response.use(async response => {\n\tif (process.env.NODE_ENV === 'development'){\n\t\tawait sleep(1000);\n\t}\n\tconst pagination = response.headers['pagination'];\n\tif (pagination) {\n\t\tresponse.data = new PaginatedResult(response.data, JSON.parse(pagination));\n\t\treturn response as AxiosResponse<PaginatedResult<any>>\n\t}\n\treturn response;\n}, (error: AxiosError) => {\n\tconst {data, status, config} = error.response!;\n\tswitch (status) {\n\t\tcase 400:\n\t\t\tif (typeof data === 'string'){\n\t\t\t\ttoast.error(data);\n\t\t\t}\n\t\t\tif (config.method === 'get' && data.errors.hasOwnProperty('id')){\n\t\t\t\thistory.push('/not-found');\n\t\t\t}\n\t\t\tif (data.errors){\n\t\t\t\tconst modalStateErrors = [];\n\t\t\t\tfor (const key in data.errors){\n\t\t\t\t\tif (data.errors[key]){\n\t\t\t\t\t\tmodalStateErrors.push(data.errors[key])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow modalStateErrors.flat();\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 401:\n\t\t\ttoast.error('unauthorized');\n\t\t\tbreak;\n\t\tcase 404:\n\t\t\thistory.push('/not-found');\n\t\t\tbreak;\n\t\tcase 500:\n\t\t\tstore.commonStore.setServerError(data);\n\t\t\thistory.push('/server-error');\n\t\t\tbreak;\n\t}\n})\n\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\n\nconst request = {\n\tget: <T> (url: string) => axios.get<T>(url).then(responseBody),\n\tpost: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n\tput: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n\tdel: <T> (url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n\tlist: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('activities', {params})\n\t\t.then(responseBody),\n\tdetails: (id: string) => request.get<Activity>(`/ctivities/${id}`),\n\tcreate: (activity: ActivityFormValues) => request.post<void>('/activities', activity),\n\tupdate: (activity: ActivityFormValues) => request.put<void>(`/activities/${activity.id}`, activity),\n\tdelete: (id: string) => request.del<void>(`/activities/${id}`),\n\tattend: (id: string) => request.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n\tcurrent: () => request.get<User>('/account'),\n\tlogin: (user: UserFormValues) => request.post<User>('/account/login', user),\n\tregister: (user: UserFormValues) => request.post<User>('/account/register', user)\n}\n\nconst Profiles = {\n\tget: (username: string) => request.get<Profile>(`/profiles/${username}`),\n\tuploadPhoto: (file: Blob) => {\n\t\tlet formData = new FormData();\n\t\tformData.append('File', file);\n\t\treturn axios.post<Photo>('photos', formData, {\n\t\t\theaders: {'Content-type': 'multipart/form-data'}\n\t\t})\n\t},\n\tupdateProfile: (profile: Partial<Profile>) => request.put<void>(`/profiles`, profile),\n\tsetMainPhoto: (id: string) => request.post(`/photos/${id}/setMain`, {}),\n\tdeletePhoto: (id: string) => request.del(`/photos/${id}`),\n\tupdateFollowing: (username: string) => request.post(`/follow/${username}`, {}),\n\tlistFollowings: (username: string, predicate: string) => \n\t\trequest.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n\tgetUserActivities: (username: string, predicate: string) => \n\t\trequest.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\n\n}\n\nconst agent = {\n\tActivities, \n\tAccount,\n\tProfiles\n}\n\nexport default agent;","import { Profile } from \"./profile\";\n\nexport interface Activity {\n\tid: string;\n\ttitle: string;\n\tdate: Date | null;\n\tdescription: string;\n\tcategory: string;\n\tcity: string;\n\tvenue: string;\n\thostUsername: string;\n\tisCancelled: boolean;\n\tattendees: Profile[];\n\tisGoing: boolean;\n\tisHost: boolean;\n\thost?: Profile;\n}\n\nexport class Activity implements Activity {\n\tconstructor(init?: ActivityFormValues) {\n\t\tObject.assign(this, init);\n\t}\n}\n\nexport class ActivityFormValues {\n\tid?: string = undefined;\n\ttitle: string = '';\n\tcategory: string = '';\n\tdescription: string = '';\n\tdate: Date | null = null;\n\tcity: string = '';\n\tvenue: string = '';\n\n\tconstructor(activity?: ActivityFormValues) {\n\t\tif (activity){\n\t\t\tthis.id = activity.id;\n\t\t\tthis.title = activity.title;\n\t\t\tthis.category = activity.category;\n\t\t\tthis.description = activity.description;\n\t\t\tthis.date = activity.date;\n\t\t\tthis.venue = activity.venue;\n\t\t\tthis.city = activity.city;\n\t\t}\n\t}\n}","import { User } from \"./user\";\n\nexport interface Profile {\n\tusername: string;\n\tdisplayName: string;\n\timage?: string;\n\tbio?: string;\n\tphotos?: Photo[];\n\tfollowing: boolean;\n\tfollowersCount: number;\n\tfollowingsCount: number;\n}\n\nexport class Profile implements Profile {\n\tconstructor(user: User){\n\t\tthis.username = user.username;\n\t\tthis.displayName = user.displayName;\n\t\tthis.image = user.image;\n\t}\n}\n\nexport interface Photo {\n\tid: string;\n\turl: string;\n\tisMain: boolean;\n}\n\nexport interface UserActivity {\n\tactivityId: string;\n\ttitle: string;\n\tcategory: string;\n\tdate: Date;\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n\tactivityRegistry = new Map<string, Activity>();\n\tselectedActivity: Activity | undefined = undefined;\n\teditMode = false;\n\tloading = false;\n\tloadingInitial = false;\n\tpagination: Pagination | null = null;\n\tpagingParams = new PagingParams();\n\tpredicate = new Map().set('all', true);\n\n\tconstructor(){\n\t\tmakeAutoObservable(this)\n\n\t\treaction(\n\t\t\t// reaction is good when looking for when value changes,\n\t\t\t// but not when its initially set.\n\t\t\t() => this.predicate.keys(),\n\t\t\t() => {\n\t\t\t\tthis.pagingParams = new PagingParams();\n\t\t\t\tthis.activityRegistry.clear();\n\t\t\t\tthis.loadActivities();\n\t\t\t}\n\t\t)\n\t}\n\n\tsetPagingParams = (pagingParams: PagingParams) => {\n\t\tthis.pagingParams = pagingParams;\n\t}\n\n\tsetPredicate = (predicate: string, value: string | Date) => {\n\t\tconst resetPredicate = () => {\n\t\t\tthis.predicate.forEach((value, key) => {\n\t\t\t\tif (key !== 'startDate') this.predicate.delete(key);\n\t\t\t})\n\t\t}\n\t\tswitch (predicate) {\n\t\t\tcase 'all': \n\t\t\t\tresetPredicate();\n\t\t\t\tthis.predicate.set('all', true)\n\t\t\t\tbreak;\n\t\t\tcase 'isGoing':\n\t\t\t\tresetPredicate()\n\t\t\t\tthis.predicate.set('isGoing', true)\n\t\t\t\tbreak;\n\t\t\tcase 'isHost':\n\t\t\t\tresetPredicate()\n\t\t\t\tthis.predicate.set('isHost', true)\n\t\t\t\tbreak;\n\t\t\tcase 'startDate':\n\t\t\t\tthis.predicate.delete('startDate');\n\t\t\t\tthis.predicate.set('startDate', value)\n\t\t}\n\t} \n\n\tget axiosParams() {\n\t\tconst params = new URLSearchParams();\n\t\tparams.append('pageNumber', this.pagingParams.pageNumber.toString());\n\t\tparams.append('pageSize', this.pagingParams.pageSize.toString());\n\n\t\tthis.predicate.forEach((value, key) => {\n\t\t\tif (key === 'startDate'){\n\t\t\t\tparams.append(key, (value as Date).toISOString())\n\t\t\t} else {\n\t\t\t\tparams.append(key, value);\n\t\t\t}\n\t\t})\n\n\t\treturn params;\n\t}\n\n\tget activitiesByDate(){\n\t\treturn Array.from(this.activityRegistry.values()).sort((a, b) => \n\t\t\ta.date!.getTime() - b.date!.getTime());\n\t}\n\n\tget groupedActivities(){\n\t\t// get array of objects (activities), each with a key, which is the\n\t\t// activity date, and for each date we have an array of activities\n\t\t// inside. Assign activities with matching dates to activities array\n\t\t// otherwise create a new array with the activity.\n\t\treturn Object.entries(\n\t\t\tthis.activitiesByDate.reduce((activities, activity) => {\n\t\t\t\t// square brackets: object property accessor. \n\t\t\t\t// const date = activity.date!.toISOString().split('T')[0];\n\t\t\t\tconst date = format(activity.date!, 'dd MMM yyyy');\n\t\t\t\tactivities[date] = activities[date] ? [...activities[date], activity] : [activity]\n\t\t\t\treturn activities;\n\t\t\t}, {} as {[key: string]: Activity[]})\n\t\t)\n\t}\n\n\tloadActivities = async () => {\n\t\tthis.loadingInitial = true;\n\t\ttry {\n\t\t\tconst result = await agent.Activities.list(this.axiosParams);\n\t\t\tresult.data.forEach((activity) => {\n\t\t\t\tthis.setActivity(activity);\n\t\t\t});\n\t\t\tthis.setPagination(result.pagination);\n\t\t\tthis.setLoadingInitial(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthis.setLoadingInitial(false);\n\t\t}\n\t}\n\n\tsetPagination = (pagination: Pagination) => {\n\t\tthis.pagination = pagination;\n\t}\n\n\tloadActivity = async (id: string) => {\n\t\tlet activity = this.getActivity(id);\n\t\tif (activity){\n\t\t\tthis.selectedActivity = activity;\n\t\t\treturn activity;\n\t\t} else {\n\t\t\tthis.loadingInitial = true;\n\t\t\ttry {\n\t\t\t\tactivity = await agent.Activities.details(id);\n\t\t\t\tthis.setActivity(activity);\n\t\t\t\trunInAction(() => {\n\t\t\t\t\tthis.selectedActivity = activity;\n\t\t\t\t})\n\t\t\t\tthis.setLoadingInitial(false);\n\t\t\t\treturn activity;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setLoadingInitial(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getActivity = (id: string) => {\n\t\treturn this.activityRegistry.get(id);\n\t}\n\n\tprivate setActivity = (activity: Activity) => {\n\t\tconst user = store.userStore.user;\n\t\tif (user) {\n\t\t\tactivity.isGoing = activity.attendees!.some(\n\t\t\t\ta => a.username === user.username\n\t\t\t)\n\t\t\tactivity.isHost = activity.hostUsername === user.username;\n\t\t\tactivity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n\t\t}\n\t\tactivity.date = new Date(activity.date!);\n\t\tthis.activityRegistry.set(activity.id, activity);\n\t}\n\n\tsetLoadingInitial = (state: boolean) => {\n\t\tthis.loadingInitial = state;\n\t}\n\n\tcreateActivity = async (activity: ActivityFormValues) => {\n\t\tconst user = store.userStore.user;\n\t\tconst attendee = new Profile(user!);\n\t\ttry {\n\t\t\tawait agent.Activities.create(activity);\n\t\t\tconst newActivity = new Activity(activity);\n\t\t\tnewActivity.hostUsername = user!.username;\n\t\t\tnewActivity.attendees = [attendee];\n\t\t\tthis.setActivity(newActivity);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.selectedActivity = newActivity;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tupdateActivity = async (activity: ActivityFormValues) => {\n\t\t// this.loading = true;\n\t\ttry {\n\t\t\tawait agent.Activities.update(activity);\n\t\t\trunInAction(() => {\n\t\t\t\t// Use '...' to loop over our existing activities,\n    \t\t\t// create new array filtering out activity and\n\t\t\t\t// adding updated activity.\n\t\t\t\t// this.activities = [...this.activities.filter(x => x.id !== activity.id), activity];\n\t\t\t\tif (activity.id) {\n\t\t\t\t\t//spread operator to set updated activity properties to existing activity\n\t\t\t\t\tlet updatedActivity = {...this.getActivity(activity.id), ...activity}\n\t\t\t\t\tthis.activityRegistry.set(activity.id, updatedActivity as Activity);\n\t\t\t\t\tthis.selectedActivity = updatedActivity as Activity;\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tdeleteActivity = async (id: string) => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Activities.delete(id);\n\t\t\trunInAction(() => {\n\t\t\t\t// this.activities = [...this.activities.filter(x => x.id !== id)];\n\t\t\t\tthis.activityRegistry.delete(id);\n\t\t\t\tthis.loading = false;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t})\n\t\t}\n\t}\n\n\tupdateAttendance = async () => {\n\t\tconst user = store.userStore.user;\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\n\t\t\trunInAction(() => {\n\t\t\t\tif (this.selectedActivity?.isGoing){\n\t\t\t\t\tthis.selectedActivity.attendees = \n\t\t\t\t\t\tthis.selectedActivity.attendees?.filter(a => a.username !== user?.username)\n\t\t\t\t\tthis.selectedActivity.isGoing = false;\n\t\t\t\t} else {\n\t\t\t\t\tconst attendee = new Profile(user!);\n\t\t\t\t\tthis.selectedActivity?.attendees?.push(attendee);\n\t\t\t\t\tthis.selectedActivity!.isGoing = true;\n\t\t\t\t}\n\t\t\t\tthis.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t} finally {\n\t\t\trunInAction(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t})\n\t\t}\n\t}\n\n\tcancelActivityToggle = async () => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n\t\t\t\tthis.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t} finally {\n\t\t\trunInAction(() => this.loading = false);\n\t\t}\n\t}\n\n\tclearSelectedActivity = () => {\n\t\tthis.selectedActivity = undefined;\n\t}\n\n\tupdateAttendeeFollowing = (username: string) => {\n\t\tthis.activityRegistry.forEach(activity => {\n\t\t\tactivity.attendees.forEach(attendee => {\n\t\t\t\tif (attendee.username === username) {\n\t\t\t\t\tattendee.following ? attendee.followersCount-- : attendee.followersCount++;\n\t\t\t\t\tattendee.following = !attendee.following;\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n \n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n\tprofile: Profile | null = null;\n\tloadingProfile = false;\n\tuploading = false;\n\tloading = false;\n\tfollowings: Profile[] = [];\n\tloadingFollowings = false;\n\tactiveTab = 0;\n\tloadingActivities = false;\n\tuserActivities: UserActivity[] = [];\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\treaction(\n\t\t\t() => this.activeTab, \n\t\t\tactiveTab => {\n\t\t\t\tif (activeTab === 3 || activeTab === 4) {\n\t\t\t\t\tconst predicate = activeTab === 3 ? 'followers' : 'followings';\n\t\t\t\t\tthis.loadFollowings(predicate);\n\t\t\t\t} else {\n\t\t\t\t\tthis.followings = [];\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tsetActiveTab = (activeTab: any) => {\n\t\tthis.activeTab = activeTab;\n\t}\n\n\tget isCurrentUser() {\n\t\tif (store.userStore.user && this.profile){\n\t\t\treturn store.userStore.user.username === this.profile.username;\n\t\t}\n\t\treturn false;\n\t}\n\n\tloadProfile = async (username: string) => {\n\t\tthis.loadingProfile = true;\n\t\ttry {\n\t\t\tconst profile = await agent.Profiles.get(username);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.profile = profile;\n\t\t\t\tthis.loadingProfile = false;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => this.loadingProfile = false);\n\t\t}\n\t}\n\n\tuploadPhoto = async (file: Blob) => {\n\t\tthis.uploading = true;\n\t\ttry {\n\t\t\tconst response = await agent.Profiles.uploadPhoto(file);\n\t\t\tconst photo = response.data;\n\t\t\trunInAction(() => {\n\t\t\t\tif (this.profile) {\n\t\t\t\t\tthis.profile.photos?.push(photo);\n\t\t\t\t\tif (photo.isMain && store.userStore.user) {\n\t\t\t\t\t\tstore.userStore.setImage(photo.url);\n\t\t\t\t\t\tthis.profile.image = photo.url;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.uploading = false;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\trunInAction(() => this.uploading = false);\n\t\t}\n\t}\n\n\tsetMainPhoto = async (photo: Photo) => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Profiles.setMainPhoto(photo.id);\n\t\t\tstore.userStore.setImage(photo.url);\n\t\t\trunInAction(() => {\n\t\t\t\tif (this.profile && this.profile.photos) {\n\t\t\t\t\tthis.profile.photos.find(p => p.isMain)!.isMain = false;\n\t\t\t\t\tthis.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n\t\t\t\t\tthis.profile.image = photo.url;\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\trunInAction(() => this.loading = false);\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tdeletePhoto = async (photo: Photo) => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Profiles.deletePhoto(photo.id);\n\t\t\trunInAction(() => {\n\t\t\t\tif (this.profile) {\n\t\t\t\t\tthis.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\trunInAction(() => this.loading = false);\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tupdateProfile = async (profile: Partial<Profile>) => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Profiles.updateProfile(profile)\n\t\t\trunInAction(() => {\n\t\t\t\tif (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n\t\t\t\t\tstore.userStore.setDisplayName(profile.displayName);\n\t\t\t\t}\n\t\t\t\tthis.profile = {...this.profile, ...profile as Profile};\n\t\t\t})\n\t\t} catch (error) {\n\t\t\trunInAction(() => this.loading = false);\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tupdateFollowing = async (username: string, following: boolean) => {\n\t\t// following parameter is what we're about to change the \n\t\t// following status to.\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Profiles.updateFollowing(username);\n\t\t\tstore.activityStore.updateAttendeeFollowing(username);\n\t\t\trunInAction(() => {\n\t\t\t\tif (this.profile && this.profile.username \n\t\t\t\t\t\t!== store.userStore.user?.username \n\t\t\t\t\t\t&& this.profile.username === username) {\n\t\t\t\t\tfollowing ? this.profile.followersCount++ : this.profile.followersCount--;\n\t\t\t\t\tthis.profile.following = !this.profile.following;\n\t\t\t\t}\n\t\t\t\tif (this.profile && this.profile.username === store.userStore.user?.username) {\n\t\t\t\t\tfollowing ? this.profile.followingsCount++ : this.profile.followingsCount--;\n\t\t\t\t}\n\t\t\t\tthis.followings.forEach(profile => {\n\t\t\t\t\tif (profile.username === username) {\n\t\t\t\t\t\tprofile.following ? profile.followersCount-- : profile.followersCount++;\n\t\t\t\t\t\tprofile.following = !profile.following;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.loading = false;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => this.loading = false);\n\t\t}\n\t}\n\n\tloadFollowings = async (predicate: string) => {\n\t\tthis.loadingFollowings = true;\n\t\ttry {\n\t\t\tconst followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.followings = followings;\n\t\t\t\tthis.loadingFollowings = false;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => this.loadingFollowings = false);\n\t\t}\n\t}\n\n\tloadUserActivities = async (predicate?: string) => {\n\t\tthis.loadingActivities = true;\n\t\ttry {\n\t\t\tconst activities = await agent.Profiles.getUserActivities(this.profile!.username, predicate!)\n\t\t\trunInAction(() => {\n\t\t\t\tthis.userActivities = activities;\n\t\t\t\tthis.loadingActivities = false;\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => this.loadingActivities = false);\n\t\t}\n\t}\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n\tuser: User | null = null;\n\t\n\tconstructor(){\n\t\tmakeAutoObservable(this)\n\t}\n\n\tget isLoggedIn() {\n\t\treturn !!this.user;\n\t}\n\n\tlogin = async (creds: UserFormValues) => {\n\t\ttry {\n\t\t\tconst user = await agent.Account.login(creds);\n\t\t\tstore.commonStore.setToken(user.token);\n\t\t\trunInAction(() => this.user = user);\n\t\t\thistory.push('/activities');\n\t\t\tstore.modalStore.closeModal();\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tlogout = () => {\n\t\tstore.commonStore.setToken(null);\n\t\twindow.localStorage.removeItem('jwt');\n\t\tthis.user = null;\n\t\thistory.push('/');\n\t}\n\n\tgetUser = async () => {\n\t\ttry {\n\t\t\tconst user = await agent.Account.current();\n\t\t\trunInAction(() => this.user = user);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tregister = async (creds: UserFormValues) => {\n\t\ttry {\n\t\t\tconst user = await agent.Account.register(creds);\n\t\t\tstore.commonStore.setToken(user.token);\n\t\t\trunInAction(() => this.user = user);\n\t\t\thistory.push('/activities');\n\t\t\tstore.modalStore.closeModal();\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tsetImage = (image:string) => {\n\t\tif (this.user) {\n\t\t\tthis.user.image = image;\n\t\t}\n\t}\n\n\tsetDisplayName = (displayName: string) => {\n\t\tif (this.user){\n\t\t\tthis.user.displayName = displayName;\n\t\t}\n\t}\n\n}","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n\tactivityStore: ActivityStore;\n\tcommonStore: CommonStore;\n\tuserStore: UserStore;\n\tmodalStore: ModalStore;\n\tprofileStore: ProfileStore;\n\tcommentStore: CommentStore;\n}\n\nexport const store: Store = {\n\tactivityStore: new ActivityStore(),\n\tcommonStore: new CommonStore(),\n\tuserStore: new UserStore(),\n\tmodalStore: new ModalStore(),\n\tprofileStore: new ProfileStore(),\n\tcommentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore(){\n\treturn useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n\terror: ServerError | null = null;\n\ttoken: string | null = window.localStorage.getItem('jwt');\n\tappLoaded = false;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\treaction(\n\t\t\t() => this.token,\n\t\t\ttoken => {\n\t\t\t\tif (token) {\n\t\t\t\t\twindow.localStorage.setItem('jwt', token)\n\t\t\t\t} else {\n\t\t\t\t\twindow.localStorage.removeItem('jwt')\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\tsetServerError = (error: ServerError) => {\n\t\tthis.error = error;\n\t}\n\n\tsetToken = (token: string | null) => {\n\t\t// reaction runs as soon as token changes\n\t\tthis.token = token;\n\t}\n\n\tsetAppLoaded = () => {\n\t\tthis.appLoaded = true;\n\t}\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n\topen: boolean;\n\tbody: JSX.Element | null;\n}\n\nexport default class ModalStore {\n\tmodal : Modal = {\n\t\topen: false,\n\t\tbody: null\n\t}\n\n\tconstructor() {\n\t\tmakeAutoObservable(this)\n\t}\n\n\topenModal = (content: JSX.Element) => {\n\t\tthis.modal.open = true;\n\t\tthis.modal.body = content;\n\t}\n\n\tcloseModal = () => {\n\t\tthis.modal.open = false;\n\t\tthis.modal.body = null;\n\t}\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n\tcomments: ChatComment[] = [];\n\thubConnection: HubConnection | null = null;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\t}\n\n\tcreateHubConnection = (activityId: string) => {\n\t\tif (store.activityStore.selectedActivity) {\n\t\t\tthis.hubConnection = new HubConnectionBuilder()\n\t\t\t\t.withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n\t\t\t\t\taccessTokenFactory: () => store.userStore.user?.token!\n\t\t\t\t})\n\t\t\t\t.withAutomaticReconnect()\n\t\t\t\t.configureLogging(LogLevel.Information)\n\t\t\t\t.build();\n\t\t\t\n\t\t\tthis.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n\t\t\tthis.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n\t\t\t\trunInAction(() => {\n\t\t\t\t\tcomments.forEach(comment => {\n\t\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt + 'Z');\n\t\t\t\t\t})\n\t\t\t\t\tthis.comments = comments;\n\t\t\t\t});\n\t\t\t})\n\n\t\t\tthis.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n\t\t\t\trunInAction(() => {\n\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt);\n\t\t\t\t\tthis.comments.unshift(comment)\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\t}\n\n\tstopHubConnection = () => {\n\t\tthis.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error))\n\t}\n\n\tclearComments = () => {\n\t\tthis.comments = [];\n\t\tthis.stopHubConnection();\n\t}\n\n\taddComment = async (values: any) => {\n\t\tvalues.activityId = store.activityStore.selectedActivity?.id;\n\t\ttry {\n\t\t\tawait this.hubConnection?.invoke('SendComment', values);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer (function NavBar() {\n\tconst {userStore: {user, logout}} = useStore();\n\treturn (\n\t\t<Menu inverted fixed='top'> \n\t\t\t<Container>\n\t\t\t\t<Menu.Item as={NavLink} to='/' exact header>\n\t\t\t\t\t<img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}/>\n\t\t\t\t\tReactivities\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item as={NavLink} to='/activities' name='Activities'/>\n\t\t\t\t<Menu.Item as={NavLink} to='/errors' name='Errors'/>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item position='right'>\n\t\t\t\t\t<Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\n\t\t\t\t\t<Dropdown pointing='top left' text={user?.displayName}>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t<Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='Profile' icon='user' />\n\t\t\t\t\t\t\t<Dropdown.Item onClick={logout} text='Logout' icon='power' />\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</Menu.Item>\n\t\t\t</Container>\n\t\t</Menu>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent } from 'react';\nimport { Button, Reveal } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n\tprofile: Profile;\n}\n\nexport default observer(function FollowButton({profile}: Props) {\n\tconst {profileStore, userStore} = useStore();\n\tconst {updateFollowing, loading} = profileStore;\n\n\tif (userStore.user?.username === profile.username) return null;\n\n\tfunction handleFollow(e: SyntheticEvent, username: string) {\n\t\te.preventDefault();\n\t\tprofile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n\t}\n\n\treturn (\n\t\t<Reveal animated='move'>\n\t\t\t<Reveal.Content visible style={{width:'100%'}}>\n\t\t\t\t<Button\n\t\t\t\t\tfluid\n\t\t\t\t\tcolor='teal'\n\t\t\t\t\tcontent={profile.following ? 'Following' : 'Not following'}\n\t\t\t\t/>\n\t\t\t</Reveal.Content>\n\t\t\t<Reveal.Content hidden style={{width:'100%'}}>\n\t\t\t\t<Button \n\t\t\t\t\tfluid\n\t\t\t\t\tbasic\n\t\t\t\t\tcolor={profile.following ? 'red' : 'green'}\n\t\t\t\t\tcontent={profile.following ? 'Unfollow' : 'Follow'}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tonClick={(e) => handleFollow(e, profile.username)}\n\t\t\t\t/>\n\t\t\t</Reveal.Content>\n\t\t</Reveal>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, Card, Icon } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n\tprofile: Profile;\n}\n\nexport default observer(function ProfileCard({profile}: Props) {\n\n\tfunction truncate(str: string | undefined) {\n\t\tif (str) {\n\t\t\treturn str.length > 40 ? str.substring(0, 37) + '...' : str;\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card as={Link} to={`/profiles/${profile.username}`}>\n\t\t\t<Image src={profile.image || '/assets/user.png'} />\n\t\t\t<Card.Content>\n\t\t\t\t<Card.Header>{profile.displayName}</Card.Header>\n\t\t\t\t<Card.Description>{truncate(profile.bio)}</Card.Description>\n\t\t\t</Card.Content>\n\t\t\t<Card.Content>\n\t\t\t\t<Icon name='user' />\n\t\t\t\t{profile.followersCount} {profile.followersCount === 1 ? ' follower' : ' followers'}\n\t\t\t</Card.Content>\n\t\t\t<FollowButton profile={profile} />\n\t\t</Card>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, List, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n\tattendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\n\tconst styles = {\n\t\tborderColor: 'orange',\n\t\tborderWidth: 3\n\t}\n\treturn (\n\t\t<List horizontal>\n\t\t\t{attendees.map(attendee => (\n\t\t\t\t<Popup \n\t\t\t\t\thoverable\n\t\t\t\t\tkey={attendee.username}\n\t\t\t\t\ttrigger={\n\t\t\t\t\t\t<List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\tsize='mini'\n\t\t\t\t\t\t\t\tcircular\n\t\t\t\t\t\t\t\tsrc={attendee.image || '/assets/user.png'}\n\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\tstyle={attendee.following ? styles : null}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Popup.Content>\n\t\t\t\t\t\t<ProfileCard profile={attendee}/>\n\t\t\t\t\t</Popup.Content>\n\t\t\t\t</Popup>\n\t\t\t\t\n\t\t\t))}\n\t\t</List>\n\t)\n})","import { format } from 'date-fns';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface Props {\n\tactivity: Activity;\n}\n\nexport default function ActivityListItem({activity}: Props){\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t{activity.isCancelled && \n\t\t\t\t\t<Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\n\t\t\t\t}\n\t\t\t\t<Item.Group>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\n\t\t\t\t\t\t<Item.Content>\n\t\t\t\t\t\t\t<Item.Header as={Link} to={`/activities/${activity.id}`}>\n\t\t\t\t\t\t\t\t{activity.title}\n\t\t\t\t\t\t\t</Item.Header>\n\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\tHosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\n\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t{activity.isHost && (\n\t\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\t\t<Label basic color='orange'>\n\t\t\t\t\t\t\t\t\t\tYou are hosting this activity\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{activity.isGoing && !activity.isHost && (\n\t\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\t\t<Label basic color='green'>\n\t\t\t\t\t\t\t\t\t\tYou are going to this activity\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t</Item>\n\t\t\t\t</Item.Group>\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<span>\n\t\t\t\t\t<Icon name='clock' /> {format(activity.date!, 'dd MMMM yyyy h:mm aa')}\n\t\t\t\t\t<Icon name='marker' /> {activity.venue}\n\t\t\t\t</span>\n\t\t\t</Segment>\n\t\t\t<Segment secondary>\n\t\t\t\t<ActivityListItemAttendee attendees={activity.attendees!} />\n\t\t\t</Segment>\n\t\t\t<Segment clearing>\n\t\t\t\t<span>{activity.description}</span>\n\t\t\t\t<Button\n\t\t\t\t\tas={Link}\n\t\t\t\t\tto={`/activities/${activity.id}`}\n\t\t\t\t\tcolor='teal'\n\t\t\t\t\tfloated='right'\n\t\t\t\t\tcontent='View'>\n\t\t\t\t</Button>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t)\n}","import React, { Fragment } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer (function ActivityList(){\n\tconst {activityStore} = useStore();\n\tconst {groupedActivities} = activityStore;\n\n\treturn (\n    <Fragment>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </Fragment>\n  );\n})","import { observer } from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters(){\n\tconst {activityStore: {predicate, setPredicate}} = useStore();\n\treturn(\n\t\t<Fragment>\n\t\t\t<Menu vertical size='large' style={{width:'100%', marginTop:27}}>\n\t\t\t\t<Header icon='filter' attached color='teal' content='Filters'/>\n\t\t\t\t<Menu.Item \n\t\t\t\t\tcontent='All Activities'\n\t\t\t\t\tactive={predicate.has('all')}\n\t\t\t\t\tonClick={() => setPredicate('all', 'true')}\n\t\t\t\t/>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tcontent=\"I'm going\"\n\t\t\t\t\tactive={predicate.has('isGoing')}\n\t\t\t\t\tonClick={() => setPredicate('isGoing', 'true')}\n\t\t\t\t/>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tcontent=\"I'm hosting\"\n\t\t\t\t\tactive={predicate.has('isHost')}\n\t\t\t\t\tonClick={() => setPredicate('isHost', 'true')}\n\t\t\t\t/>\n\t\t\t</Menu>\n\t\t\t<Header/>\n\t\t\t<Calendar\n\t\t\t\tonChange={(date) => setPredicate('startDate', date as Date)}\n\t\t\t\tvalue={predicate.get('startDate') || new Date()}\n\t\t\t/>\n\t\t</Fragment>\n\n\t)\n})","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityList from './ActivityList';\nimport ActivityFilters from './ActivityFilters';\nimport { PagingParams } from '../../../app/models/pagination';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n\t// Get data from API. Use useState hook with name of variable\n\t// where we're going to store state, and function called to \n\t// set the state. Set initial state of emtpy array.\n\tconst {activityStore} = useStore();\n\tconst {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n\tconst [loadingNext, setLoadingNext] = useState(false);\n\n\tfunction handleGetNext() {\n\t\tsetLoadingNext(true);\n\t\tsetPagingParams(new PagingParams(pagination!.currentPage + 1));\n\t\tloadActivities().then(() => setLoadingNext(false));\n\t}\n\n\tuseEffect(() => {\n\t\tif (activityRegistry.size <= 1) loadActivities();\n\t  }, [activityRegistry.size, loadActivities])\n\t\t// add array of dependencies (here empty) to make sure that useEffect\n\t\t// only runs one time. useEffect is a hook that fetches data from \n\t\t// server. If it runs, it will set a change to activities, causing \n\t\t// a re-render. in turn that acses activities to change, and it will \n\t\t// re-render again. thus we need to send in an emtpy array of\n\t\t// dependencies to prevent this.\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width='10'>\n\t\t\t\t{activityStore.loadingInitial && !loadingNext ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ActivityListItemPlaceholder />\n\t\t\t\t\t\t<ActivityListItemPlaceholder />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<InfiniteScroll\n\t\t\t\t\t\tpageStart={0}\n\t\t\t\t\t\tloadMore={handleGetNext}\n\t\t\t\t\t\thasMore={!loadingNext && !!pagination &&\n\t\t\t\t\t\t\tpagination.currentPage < pagination.totalPages}\n\t\t\t\t\t\tinitialLoad={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ActivityList />\n\t\t\t\t\t</InfiniteScroll>\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width='6'>\n\t\t\t\t<ActivityFilters />\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={10}>\n\t\t\t\t<Loader active={loadingNext} />\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t)\n})","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n\tplaceholder: string;\n\tname: string;\n\tlabel?: string;\n\ttype?: string;\n}\n\nexport default function CustomTextInput(props: Props){\n\tconst [field, meta] = useField(props.name)\n\treturn (\n\t\t// double exclamation mark converts to boolean whether\n\t\t// its null or undefined.\n\t\t<Form.Field error ={meta.touched && !!meta.error}>\n\t\t\t<label>{props.label}</label>\n\t\t\t<input {...field}{...props}/>\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<Label pointing basic color='red'>{meta.error} </Label>\n\t\t\t) : null}\n\t\t</Form.Field>\n\t)\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport CustomTextInput from '../../app/common/form/CustomTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm() {\n\tconst {userStore} = useStore();\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{email:'', password:'', error: null}}\n\t\t\tonSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \n\t\t\t\tsetErrors({error: 'Invalid email or password'}))}\n\t\t>\n\t\t\t{({handleSubmit, isSubmitting, errors}) => (\n\t\t\t\t<Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n\t\t\t\t\t<Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\n\t\t\t\t\t<CustomTextInput name='email' placeholder='Email' />\n\t\t\t\t\t<CustomTextInput name='password' placeholder='Password' type='password' />\n\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\tname='error' render={() => <Label style={{marginBottom:10}} basic color='red' content={errors.error}/> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t)\n})","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n\terrors: any;\n}\n\nexport default function ValidationErrors({errors}: Props){\n\treturn(\n\t\t<Message error>\n\t\t\t{errors && (\n\t\t\t\t<Message.List>\n\t\t\t\t\t{errors.map((err: any, i: any) => (\n\t\t\t\t\t\t<Message.Item key={i}>{err}</Message.Item>\n\t\t\t\t\t))}\n\t\t\t\t</Message.List>\n\t\t\t)}\n\t\t</Message>\n\t)\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport CustomTextInput from '../../app/common/form/CustomTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nexport default observer(function RegisterForm() {\n\tconst {userStore} = useStore();\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{displayName:'', username:'', email:'', password:'', error: null}}\n\t\t\tonSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \n\t\t\t\tsetErrors({error}))}\n\t\t\tvalidationSchema={Yup.object({\n\t\t\t\tdisplayName: Yup.string().required(),\n\t\t\t\tusername: Yup.string().required(),\n\t\t\t\temail: Yup.string().required().email(),\n\t\t\t\tpassword: Yup.string().required(),\n\t\t\t})}\n\t\t>\n\t\t\t{({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n\t\t\t\t<Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n\t\t\t\t\t<Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center'/>\n\t\t\t\t\t<CustomTextInput name='displayName' placeholder='Display Name' />\n\t\t\t\t\t<CustomTextInput name='username' placeholder='User' />\n\t\t\t\t\t<CustomTextInput name='email' placeholder='Email' />\n\t\t\t\t\t<CustomTextInput name='password' placeholder='Password' type='password' />\n\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\tname='error' render={() => <ValidationErrors errors={errors.error}/> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button disabled={!isValid || !dirty || isSubmitting}\n\t\t\t\t\t\tloading={isSubmitting} positive content='Register' type='submit' fluid />\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function Homepage(){\n\tconst {userStore, modalStore} = useStore();\n\treturn (\n\t\t<Segment inverted textAlign='center' vertical className='masthead'>\n\t\t\t<Container text>\n\t\t\t\t<Header as='h1' inverted>\n\t\t\t\t\t<Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom:12}} />\n\t\t\t\t\tReactivities\n\t\t\t\t</Header>\n\t\t\t\t{userStore.isLoggedIn ? (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<Header as='h2' inverted content='Welcome to Reactivities' />\n\t\t\t\t\t\t<Button as={Link} to='/activities' size='huge' inverted>\n\t\t\t\t\t\t\tGo to Activities!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Fragment>\n\n\t\t\t\t) : (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<Button onClick={() => modalStore.openModal(<LoginForm />)} to='/login' size='huge' inverted>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button onClick={() => modalStore.openModal(<RegisterForm />)} to='/login' size='huge' inverted>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\n\t\t\t</Container>\n\t\t</Segment>\n\t)\n})","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n\tinverted?: boolean;\n\tcontent?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n\treturn (\n\t\t<Dimmer active={true} inverted={inverted}>\n\t\t\t<Loader content={content} />\n\t\t</Dimmer>\n\t)\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n\tplaceholder: string;\n\tname: string;\n\trows: number;\n\tlabel?: string;\n}\n\nexport default function CustomTextArea(props: Props){\n\tconst [field, meta] = useField(props.name)\n\treturn (\n\t\t// double exclamation mark converts to boolean whether\n\t\t// its null or undefined.\n\t\t<Form.Field error ={meta.touched && !!meta.error}>\n\t\t\t<label>{props.label}</label>\n\t\t\t<textarea {...field}{...props}/>\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<Label pointing basic color='red'>{meta.error} </Label>\n\t\t\t) : null}\n\t\t</Form.Field>\n\t)\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n\tplaceholder: string;\n\tname: string;\n\toptions: any;\n\tlabel?: string;\n}\n\nexport default function CustomTextInput(props: Props){\n\tconst [field, meta, helpers] = useField(props.name)\n\treturn (\n\t\t// double exclamation mark converts to boolean whether\n\t\t// its null or undefined.\n\t\t<Form.Field error ={meta.touched && !!meta.error}>\n\t\t\t<label>{props.label}</label>\n\t\t\t<Select\n\t\t\t\tclearable\n\t\t\t\toptions={props.options}\n\t\t\t\tvalue={field.value || null}\n\t\t\t\tonChange={(e, d) => helpers.setValue(d.value)}\n\t\t\t\tonBlur={() => helpers.setTouched(true)}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t/>\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<Label pointing basic color='red'>{meta.error} </Label>\n\t\t\t) : null}\n\t\t</Form.Field>\n\t)\n}","export const categoryOptions = [\n\t{text: 'Drinks', value:'drinks'},\n\t{text: 'Culture', value:'culture'},\n\t{text: 'Film', value:'film'},\n\t{text: 'Food', value:'food'},\n\t{text: 'Music', value:'music'},\n\t{text: 'Travel', value:'travel'}\n]","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nexport default function CustomDateInput(props: Partial<ReactDatePickerProps>){\n\tconst [field, meta, helpers] = useField(props.name!);\n\treturn (\n\t\t// double exclamation mark converts to boolean whether\n\t\t// its null or undefined.\n\t\t<Form.Field error ={meta.touched && !!meta.error}>\n\t\t\t<DatePicker\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t\tselected={(field.value && new Date(field.value)) || null}\n\t\t\t\tonChange={value => helpers.setValue(value)}\n\t\t\t/>\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<Label pointing basic color='red'>{meta.error} </Label>\n\t\t\t) : null}\n\t\t</Form.Field>\n\t)\n}","import { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useState } from 'react';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport { useHistory, useParams } from 'react-router';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { v4 as uuid } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomTextInput from '../../../app/common/form/CustomTextInput';\nimport CustomTextArea from '../../../app/common/form/CustomTextArea';\nimport CustomSelectInput from '../../../app/common/form/CustomSelectInput';\nimport { categoryOptions } from '../../../app/common/options/CategoryOptions';\nimport CustomDateInput from '../../../app/common/form/CustomDateInput';\nimport { ActivityFormValues } from '../../../app/models/activity';\n\nexport default observer (function ActivityForm() {\n\tconst history = useHistory();\n\tconst {activityStore} = useStore();\n\tconst {createActivity, updateActivity,\n\t\tloadActivity, loadingInitial} = activityStore;\n\tconst {id} = useParams<{id: string}>();\n\n\tconst [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n\tconst validationSchema = Yup.object({\n\t\ttitle: Yup.string().required('The activity title is required'),\n\t\tdescription: Yup.string().required('The activity description is required'),\n\t\tcategory: Yup.string().required(),\n\t\tdate: Yup.string().required('Date is required').nullable(),\n\t\tvenue: Yup.string().required(),\n\t\tcity: Yup.string().required(),\n\t})\n\n\tuseEffect(() => {\n\t\tif (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\n\t}, [id, loadActivity]);\n\n\tfunction handleFormSubmit(activity: ActivityFormValues){\n\t\tif (!activity.id){\n\t\t\tlet newActivity = {\n\t\t\t\t...activity,\n\t\t\t\tid: uuid()\n\t\t\t};\n\t\t\tcreateActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\n\t\t} else {\n\t\t\tupdateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n\t\t}\n\t}\n\n\tif (loadingInitial) return <LoadingComponent content='Loading activity...' />\n\n\treturn (\n\t\t<Segment clearing>\n\t\t\t<Header content='Activity Details' sub color='teal'/>\n\t\t\t<Formik \n\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\tenableReinitialize \n\t\t\t\tinitialValues={activity}\n\t\t\t\tonSubmit={values => handleFormSubmit(values)}>\n\t\t\t\t{({ handleSubmit, isValid, isSubmitting, dirty }) => (\n\t\t\t\t<Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n\t\t\t\t\t<CustomTextInput name='title' placeholder='Title' />\n\t\t\t\t\t<CustomTextArea rows={4} placeholder='Description' name='description'/>\n\t\t\t\t\t<CustomSelectInput options={categoryOptions} placeholder='Category' name='category'/>\n\t\t\t\t\t{/* <input type=\"date\" name=\"date\"></input> */}\n\t\t\t\t\t<CustomDateInput \n\t\t\t\t\t\tplaceholderText='Date'\n\t\t\t\t\t\tname='date'\n\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\ttimeCaption='time'\n\t\t\t\t\t\tdateFormat='MMMM d, yyyy h:mm aa'\n\t\t\t\t\t/>\n\t\t\t\t\t<Header content='Location Details' sub color='teal'/>\n\t\t\t\t\t<CustomTextInput placeholder='City' name='city'/>\n\t\t\t\t\t<CustomTextInput placeholder='Venue' name='venue'/>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tdisabled={ isSubmitting || !dirty || !isValid}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tfloated='right'\n\t\t\t\t\t\tpositive \n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tcontent='Submit'\n\t\t\t\t\t/>\n\t\t\t\t\t<Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\n\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Segment>\n\t)\n})","import { Formik, Form, Field, FieldProps } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store'\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns'\n\ninterface Props {\n    activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\n    const {commentStore} = useStore();\n\n    useEffect(() => {\n        if (activityId) {\n            commentStore.createHubConnection(activityId);\n        }\n        return () => {\n            commentStore.clearComments();\n        }\n    }, [commentStore, activityId]);\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                attached='top'\n                inverted\n                color='teal'\n                style={{border: 'none'}}\n            >\n                <Header>Chat about this event</Header>\n            </Segment>\n            <Segment attached clearing>\n                <Formik\n                    onSubmit={(values, {resetForm}) => \n                        commentStore.addComment(values).then(() => resetForm())}\n                    initialValues={{body: ''}}\n                    validationSchema={Yup.object({\n                        body: Yup.string().required()\n                    })}\n                >\n                    {({isSubmitting, isValid, handleSubmit}) => (\n                        <Form className = 'ui form'>\n                            <Field name='body'>\n                                {(props: FieldProps) => (\n                                    <div style={{position: 'relative'}}>\n                                        <Loader active={isSubmitting} />\n                                        <textarea\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\n                                            rows={2}\n                                            {...props.field}\n                                            onKeyPress={e => {\n                                                if (e.key === 'Enter' && e.shiftKey) {\n                                                    return;\n                                                }\n                                                if (e.key === 'Enter' && !e.shiftKey) {\n                                                    e.preventDefault();\n                                                    isValid && handleSubmit();\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                )}\n                            </Field>\n                        </Form>\n                    )}\n                </Formik>\n                <Comment.Group>\n                    {commentStore.comments.map(comment => (\n                        <Comment key={comment.id}>\n                            <Comment.Avatar src={comment.image || '/assets/user.png'}/>\n                            <Comment.Content>\n                                <Comment.Author as={Link} to ={`/profiles/${comment.username}`}>\n                                    {comment.displayName}\n                                </Comment.Author>\n                                <Comment.Metadata>\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                                </Comment.Metadata>\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\n                            </Comment.Content>\n                        </Comment>\n                    ))}\n                </Comment.Group>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{padding: '0'}}>\n                {activity.isCancelled &&\n                    <Label style={{position: 'absolute', zIndex: 100, left:-14, top:20}}\n                        ribbon color='red' content='Cancelled'/>\n                }\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{color: 'white'}}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                        <Button\n                            color={activity.isCancelled ? 'green' : 'red'}\n                            floated='left'\n                            basic\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n                            onClick={cancelActivityToggle}\n                            loading={loading}\n                        />\n                        <Button as={Link} \n                            disabled={activity.isCancelled}\n                            to={`/manage/${activity.id}`} \n                            color='orange'\n                            floated='right'>\n                            Manage Event\n                        </Button>\n                    </>\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button disabled={activity.isCancelled}\n                        loading={loading}\n                        onClick={updateAttendance}\n                        color='teal'>\n                            Join Activity\n                    </Button>\n                )}\n            </Segment>\n        </Segment.Group>\n    )\n})","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <span>\n                        {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                        </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../app/models/activity'\n\ninterface Props {\n    activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\n    if (!attendees) return null;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\n                        {attendee.username === host?.username &&\n                            <Label\n                                style={{ position: 'absolute' }}\n                                color='orange'\n                                ribbon='right'\n                            >\n                                Host\n                            </Label>\n                        }\n\n                        <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n                        <Item.Content verticalAlign='middle'>\n                            <Item.Header as='h3'>\n                                <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                            </Item.Header>\n                            {attendee.following && \n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\n                            }\n                        </Item.Content>\n                    </Item>\n                    ))}\n                </List>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\nexport default observer (function ActivityDetails() {\n\n\tconst {activityStore} = useStore();\n\tconst {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} = activityStore;\n\tconst {id} = useParams<{id: string}>();\n\n\tuseEffect(() => {\n\t\tif (id) loadActivity(id);\n\t\treturn () => clearSelectedActivity();\n\t}, [id, loadActivity, clearSelectedActivity]);\n\n\tif (loadingInitial || !activity) return <LoadingComponent />;\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width={10}>\n\t\t\t\t<ActivityDetailedHeader activity={activity}/>\n\t\t\t\t<ActivityDetailedInfo activity={activity}/>\n\t\t\t\t<ActivityDetailedChat activityId={activity.id} />\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={6}>\n\t\t\t\t<ActivityDetailedSidebar activity={activity} />\n\t\t\t</Grid.Column>\n\t\t\t\n\t\t</Grid>\n\t)\n})","\nimport React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorized() {\n        axios.get(baseUrl + 'buggy/unauthorized').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorized} content='Unauthorized' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors &&\n                <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n\treturn(\n\t\t<Segment placeholder>\n\t\t\t<Header icon>\n\t\t\t\t<Icon name='search'/>\n\t\t\t\tOoops - we've looked everywhere and could not find this.\n\t\t\t</Header>\n\t\t\t<Segment.Inline>\n\t\t\t\t<Button as={Link} to='/activities' primary>\n\t\t\t\t\tReturn to activities page\n\t\t\t\t</Button>\n\t\t\t</Segment.Inline>\n\t\t</Segment>\n\t)\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError(){\n\tconst {commonStore} = useStore();\n\treturn (\n\t\t<Container>\n\t\t\t<Header as='h1' content='Server Error' />\n\t\t\t<Header sub as ='h5' color='red' content={commonStore.error?.message} />\n\t\t\t{commonStore.error?.details &&\n\t\t\t\t<Segment>\n\t\t\t\t\t<Header as='h4' content='Stack trace' color='teal' />\n\t\t\t\t\t<code style={{marginTop:'10px'}}>{commonStore.error.details}</code>\n\t\t\t\t</Segment>\n\t\t\t}\n\t\t</Container>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n\tconst {modalStore} = useStore();\n\n\treturn (\n\t\t<Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini' >\n\t\t\t<Modal.Content>\n\t\t\t\t{modalStore.modal.body}\n\t\t\t</Modal.Content>\n\t\t</Modal>\n\t)\n\n})","import { Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport { Profile } from '../../app/models/profile';\nimport CustomTextInput from '../../app/common/form/CustomTextInput';\nimport CustomTextArea from '../../app/common/form/CustomTextArea';\nimport { Button } from 'semantic-ui-react';\n\ninterface Props {\n\tsetEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\n\tconst {profileStore: {profile, updateProfile}} = useStore();\n\n\tconst validationSchema = Yup.object({\n\t\tdisplayName: Yup.string().required(\"Display name is required\")\n\t})\n\n\tfunction handleFormSubmit(profile: Partial<Profile>){\n\t\tupdateProfile(profile).then(() => setEditMode(false));\n\t}\n\n\treturn (\n\t\t<Formik \n\t\t\tinitialValues={{displayName: profile?.displayName, bio:\n\t\t\t\tprofile?.bio}}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={values => handleFormSubmit(values)}>\n\t\t\t\n\t\t\t{({ handleSubmit, isValid, isSubmitting, dirty }) => (\n\t\t\t\t<Form className='ui form' onSubmit={handleSubmit}>\n\t\t\t\t\t<CustomTextInput placeholder='Display Name' name='displayName'/>\n\t\t\t\t\t<CustomTextArea placeholder='Bio' name='bio' rows={3} />\n\t\t\t\t\t<Button \n\t\t\t\t\t\tpositive\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tdisabled={!isValid || !dirty}\n\t\t\t\t\t\tcontent='Update profile'\n\t\t\t\t\t\tfloated='right'\n\t\t\t\t\t/>\n\t\t\t\t</Form>\n\t\t\t)}\n\n\t\t</Formik>\n\n\t)\n})","import React, { useState } from 'react';\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileEditForm from './ProfileEditForm';\n\nexport default function ProfileAbout(){\n\tconst {profileStore} = useStore();\n\tconst {isCurrentUser, profile} = profileStore;\n\tconst [editMode, setEditMode] = useState(false);\n\n\treturn (\n\t\t<Tab.Pane>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column width='16'>\n\t\t\t\t\t<Header floated='left' icon='user' content={`About \n\t\t\t\t\t\t${profile?.displayName}`} />\n\t\t\t\t\t{isCurrentUser && (\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tfloated='right'\n\t\t\t\t\t\t\tbasic\n\t\t\t\t\t\t\tcontent={editMode ? 'Cancel' : 'Edit Profile'}\n\t\t\t\t\t\t\tonClick={() => setEditMode(!editMode)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width='16'>\n\t\t\t\t\t{editMode ? \n\t\t\t\t\t\t<ProfileEditForm setEditMode={setEditMode} /> : \n\t\t\t\t\t\t<span style={{whiteSpace: 'pre-wrap'}}>{\n\t\t\t\t\t\t\tprofile?.bio}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</Tab.Pane>\n\t);\n\n}","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Grid, Header, Tab, TabProps, Image } from 'semantic-ui-react';\nimport { UserActivity } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\nconst panes = [\n\t{ menuItem: 'Future Events', pane: { key: 'future' }},\n\t{ menuItem: 'Past Events', pane: { key: 'past' }},\n\t{ menuItem: 'Hosting', pane: { key: 'hosting'}}\n]\n\nexport default observer(function ProfileActivities() {\n\tconst {profileStore} = useStore();\n\tconst {loadUserActivities, profile, loadingActivities, userActivities } = profileStore;\n\n\tuseEffect(() => {\n\t\tloadUserActivities(profile!.username);\n\t}, [loadUserActivities, profile]);\n\n\tfunction handleTabChange(e: SyntheticEvent, data: TabProps) {\n\t\tloadUserActivities(panes[data.activeIndex as number].pane.key);\n\t};\n\n\treturn (\n\t\t<Tab.Pane loading={loadingActivities}>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column width={16}>\n\t\t\t\t\t<Header floated='left' icon='calendar' content={'Activities'}/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={16}>\n\t\t\t\t\t<Tab \n\t\t\t\t\t\tpanes={panes}\n\t\t\t\t\t\tmenu={{secondary: true, pointing: true}}\n\t\t\t\t\t\tonTabChange={(e, data) => handleTabChange(e, data)}\n\t\t\t\t\t/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Card.Group itemsPerRow={4}>\n\t\t\t\t\t\t{userActivities.map((activity: UserActivity) => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={activity.activityId}\n\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\tto={`/activities/${activity.activityId}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tsrc={`/assets/categoryImages/${activity.category}.jpg`}\n\t\t\t\t\t\t\t\t\tstyle={{minHeight: 100, objectFit: 'cover'}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t\t\t<Card.Header textAlign='center'>\n\t\t\t\t\t\t\t\t\t\t{activity.title}\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Meta textAlign='center'>\n\t\t\t\t\t\t\t\t\t\t<div>{format(new Date(activity.date), 'do LLL')}</div>\n\t\t\t\t\t\t\t\t\t\t<div>{format(new Date(activity.date), 'h:mm a')}</div>\n\t\t\t\t\t\t\t\t\t</Card.Meta>\n\t\t\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t</Card.Group>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</Tab.Pane>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileCard from './ProfileCard';\n\nexport default observer(function ProfileFollowings() {\n\tconst {profileStore} = useStore();\n\tconst {profile, followings, loadingFollowings, activeTab} = profileStore;\n\n\treturn (\n\t\t<Tab.Pane loading={loadingFollowings}>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column width={16}>\n\t\t\t\t\t<Header \n\t\t\t\t\t\tfloated='left'\n\t\t\t\t\t\ticon='user'\n\t\t\t\t\t\tcontent={activeTab === 3 ? \n\t\t\t\t\t\t\t`People following ${profile?.displayName}` : \n\t\t\t\t\t\t\t`People ${profile?.displayName} is following`}\n\t\t\t\t\t/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={16}>\n\t\t\t\t\t<Card.Group itemsPerRow={4}>\n\t\t\t\t\t\t{followings.map(profile => (\n\t\t\t\t\t\t\t<ProfileCard key={profile.username} profile={profile} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Card.Group>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</Tab.Pane>\n\t)\n})","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n\timagePreview: string;\n\tsetCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\n\treturn (\n\t\t<Cropper \n\t\t\tsrc={imagePreview}\n\t\t\tstyle={{height: 200, width: '100%'}}\n\t\t\tinitialAspectRatio={1}\n\t\t\taspectRatio={1}\n\t\t\tpreview='.img-preview'\n\t\t\tguides={false}\n\t\t\tviewMode={1}\n\t\t\tautoCropArea={1}\n\t\t\tbackground={false}\n\t\t\tonInitialized={cropper => setCropper(cropper)}\n\t\t/>\n\t)\n}","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n\tsetFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n\tconst dzStyles = {\n\t\tborder: 'dashed 3px #eee',\n\t\tborderColor: '#eee',\n\t\tborderRadius: '5px',\n\t\tpaddingTop: '30px',\n\t\ttextAlign: 'center' as 'center',\n\t\theight: 200\n\t}\n\n\tconst dzActive = {\n\t\tborderColor: 'green'\n\t}\n\n\tconst onDrop = useCallback(acceptedFiles => {\n\t\tsetFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n\t\t\tpreview: URL.createObjectURL(file)\n\t\t})))\n\t}, [setFiles])\n\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({onDrop})\n\n\treturn (\n\t\t<div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\n\t\t\t<input {...getInputProps()} />\n\t\t\t<Icon name='upload' size='huge' />\n\t\t\t<Header content='Drop image here' />\n\t\t</div>\n\t)\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n\tloading: boolean;\n\tuploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\n\tconst [files, setFiles] = useState<any>([]);\n\tconst [cropper, setCropper] = useState<Cropper>();\n\n\tfunction onCrop() {\n\t\tif (cropper) {\n\t\t\tcropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tfiles.forEach((file: any) => { \n\t\t\t\tURL.revokeObjectURL(file.preview)\n\t\t\t});\n\t\t}\n\t}, [files])\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width={4}>\n\t\t\t\t<Header sub color='teal' content='Step 1 - Add Photo' />\n\t\t\t\t<PhotoWidgetDropzone setFiles={setFiles}/>\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={1}/>\n\t\t\t<Grid.Column width={4}>\n\t\t\t\t<Header sub color='teal' content='Step 2 - Resize Image' />\n\t\t\t\t{files && files.length > 0 && (\n\t\t\t\t\t<PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\n\t\t\t\t)}\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={1}/>\n\t\t\t<Grid.Column width={4}>\n\t\t\t\t<Header sub color='teal' content='Step 3 - Preview & Upload' />\n\t\t\t\t{files && files.length > 0 &&\n\t\t\t\t<>\n\t\t\t\t\t<div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n\t\t\t\t\t<Button.Group widths={2}>\n\t\t\t\t\t\t<Button loading={loading} onClick={onCrop} positive icon='check' />\n\t\t\t\t\t\t<Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n\t\t\t\t\t</Button.Group>\n\t\t\t\t</>}\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t)\n}","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Card, Header, Tab, Image, Grid, Button } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n\tprofile: Profile;\n}\n\nexport default observer(function ProfilePhotos({profile}: Props) {\n\tconst {profileStore: {isCurrentUser, uploadPhoto, deletePhoto,\n\t\t\tuploading, loading, setMainPhoto}} = useStore();\n\tconst [addPhotoMode, setAddPhotoMode] = useState(false);\n\tconst [target, setTarget] = useState('');\n\n\tfunction handlePhotoUpload(file: Blob) {\n\t\tuploadPhoto(file).then(() => setAddPhotoMode(false));\n\t}\n\n\tfunction handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n\t\tsetTarget(e.currentTarget.name);\n\t\tsetMainPhoto(photo);\n\t}\n\n\tfunction handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n\t\tsetTarget(e.currentTarget.name);\n\t\tdeletePhoto(photo);\n\t}\n\n\treturn (\n\t\t<Tab.Pane>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column width={16}>\n\t\t\t\t\t<Header floated='left' icon='image' content='Photos' />\n\t\t\t\t\t{isCurrentUser && (\n\t\t\t\t\t\t<Button floated='right' basic\n\t\t\t\t\t\t\tcontent={addPhotoMode ? 'Cancel' : 'Add Photo'}\n\t\t\t\t\t\t\tonClick={() => setAddPhotoMode(!addPhotoMode)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={16}>\n\t\t\t\t\t{addPhotoMode ? (\n\t\t\t\t\t\t<PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Card.Group itemsPerRow={5}>\n\t\t\t\t\t\t\t{profile.photos?.map(photo => (\n\t\t\t\t\t\t\t\t<Card key={photo.id}>\n\t\t\t\t\t\t\t\t\t<Image src={photo.url}/>\n\t\t\t\t\t\t\t\t\t{isCurrentUser && (\n\t\t\t\t\t\t\t\t\t\t<Button.Group fluid widths={2}>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tbasic\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='green'\n\t\t\t\t\t\t\t\t\t\t\t\tcontent='Main'\n\t\t\t\t\t\t\t\t\t\t\t\tname={'main' + photo.id}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === 'main' + photo.id && loading}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => handleSetMainPhoto(photo, e)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tbasic\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\t\t\t\t\t\t\ticon='trash'\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === photo.id && loading}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => handleDeletePhoto(photo, e)}\n\t\t\t\t\t\t\t\t\t\t\t\tname={photo.id}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Card.Group>\n\t\t\t\t\t)}\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\t\t\t\n\t\t</Tab.Pane>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileActivities from './ProfileActivities';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n\tprofile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n\tconst {profileStore} = useStore();\n\t\n\tconst panes = [\n\t\t{menuItem: 'About', render: () => <ProfileAbout />},\n\t\t{menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\n\t\t{menuItem: 'Events', render: () => <ProfileActivities />},\n\t\t{menuItem: 'Followers', render: () => <ProfileFollowings />},\n\t\t{menuItem: 'Following', render: () => <ProfileFollowings />}\n\t];\n\n\treturn (\n\t\t<Tab \n\t\t\tmenu={{fluid: true, vertical: true}}\n\t\t\tmenuPosition='right'\n\t\t\tpanes={panes}\n\t\t\tonTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n\t\t/>\n\t)\n\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n\tprofile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n\treturn(\n\t\t<Segment>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column width={12}>\n\t\t\t\t\t<Item.Group>\n\t\t\t\t\t\t<Item>\n\t\t\t\t\t\t\t<Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\n\t\t\t\t\t\t\t<Item.Content verticalAlign='middle'>\n\t\t\t\t\t\t\t\t<Header as='h1' content={profile.displayName} />\n\t\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t</Item.Group>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={4}>\n\t\t\t\t\t<Statistic.Group width={2}>\n\t\t\t\t\t\t<Statistic label='Followers' value={profile.followersCount}/>\n\t\t\t\t\t\t<Statistic label='Following' value={profile.followingsCount}/>\n\t\t\t\t\t</Statistic.Group>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<FollowButton profile={profile} />\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t</Segment>\n\t)\n})","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n\tconst {username} = useParams<{username: string}>();\n\tconst {profileStore} = useStore();\n\tconst {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\n\n\tuseEffect(() => {\n\t\tloadProfile(username);\n\t\treturn () => {\n\t\t\tsetActiveTab(0);\n\t\t}\n\t}, [loadProfile, username, setActiveTab]);\n\n\tif (loadingProfile) return <LoadingComponent content='Loading profile...' />\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width={16}>\n\t\t\t\t{profile &&\n\t\t\t\t<>\n\t\t\t\t\t<ProfileHeader profile={profile} /> \n\t\t\t\t\t<ProfileContent profile={profile} />\n\t\t\t\t</> }\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t)\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n\tcomponent: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n\tconst {userStore: {isLoggedIn}} = useStore();\n\treturn (\n\t\t<Route \n\t\t\t{...rest}\n\t\t\trender={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n\t\t/>\n\t)\n}","import React, { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport HomePage from '../../features/home/homepage';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token){\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...'/>\n\n  return (\n    <Fragment>\n      <ToastContainer position='bottom-right' hideProgressBar/>\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'} // any route that matches / plus something else\n        render={() => ( // use render method\n          <Fragment>\n            <NavBar />\n            <Container style={{marginTop: '7em'}}>\n              {/* a switch makes routes exclusive, so not more than one of these\n              routed components can be rendered at the same time */}\n              <Switch> \n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                {/* <Route path='/login' component={LoginForm} /> */}\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  // Some 3rd party libraries will not work with react if its in strict mode.\n  // <React.StrictMode> \n    <StoreContext.Provider value={store}>\n      <Router history={history}>\n        <ScrollToTop />\n        <App />\n      </Router>\n    </StoreContext.Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}